name: Build lede
on: 
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Projects
        uses: actions/checkout@main
      - name: Delete Files
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

      - name: Show system
        run: |
          lscpu
          free -h
          df -Th
          uname -a

      - name: Installation depends
        run: |
          sudo apt update -y
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev \
          libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev \
          libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 \
          python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo \
          uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
      - name: Clone source code
        run: |
          git clone https://github.com/coolsnowwolf/lede.git
        

          
      - name: Build 
        run: |
          ls -a $GITHUB_WORKSPACE
          cp config-x64/lede-x64 lede/.config
          cd lede
          make defconfig
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make -j $(nproc) download world
          
      - name: Cache Lede Build Dependencies
        uses: actions/cache@v2
        with:
          path: |
            lede/.ccache
          key: ${{ runner.os }}-${{ hashFiles('**/Makefile') }}
          
      - name: Filter and upload firmware
        run: |
          mkdir lede-firmware
          find lede/bin/ -type f -name "*-squashfs-combined.*" -exec cp {} lede-firmware/ \;
          find lede/bin/ -type f -name "*-imagebuilder-*" -exec cp {} lede-firmware/ \;
          find lede/bin/ -type f -name "*-sdk-*" -exec cp {} lede-firmware/ \;
        working-directory: ${{ github.workspace }}
  
      - name: Set Date and Time
        id: datetime
        run: echo "::set-output name=datetime::$(date +'%Y%m%d%H%M%S')"

      - name: Upload lede firmware
        uses: softprops/action-gh-release@master
        with:
          tag_name: lede-x64-${{ steps.datetime.outputs.datetime }}
          files: lede-firmware/*.*
          
